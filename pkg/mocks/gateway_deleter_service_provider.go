// Code generated by mockery v2.20.2. DO NOT EDIT.

package mocks

import (
	domain "github.com/antelman107/filestorage/pkg/domain"
	mock "github.com/stretchr/testify/mock"

	zap "go.uber.org/zap"
)

// GatewayDeleterServiceProvider is an autogenerated mock type for the GatewayDeleterServiceProvider type
type GatewayDeleterServiceProvider struct {
	mock.Mock
}

// GetGatewayDeleterService provides a mock function with given fields: client, repo, concurrency, logger
func (_m *GatewayDeleterServiceProvider) GetGatewayDeleterService(client domain.StorageV1Client, repo domain.GatewayRepository, concurrency int, logger *zap.Logger) domain.GatewayDeleterService {
	ret := _m.Called(client, repo, concurrency, logger)

	var r0 domain.GatewayDeleterService
	if rf, ok := ret.Get(0).(func(domain.StorageV1Client, domain.GatewayRepository, int, *zap.Logger) domain.GatewayDeleterService); ok {
		r0 = rf(client, repo, concurrency, logger)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(domain.GatewayDeleterService)
		}
	}

	return r0
}

type mockConstructorTestingTNewGatewayDeleterServiceProvider interface {
	mock.TestingT
	Cleanup(func())
}

// NewGatewayDeleterServiceProvider creates a new instance of GatewayDeleterServiceProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewGatewayDeleterServiceProvider(t mockConstructorTestingTNewGatewayDeleterServiceProvider) *GatewayDeleterServiceProvider {
	mock := &GatewayDeleterServiceProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
