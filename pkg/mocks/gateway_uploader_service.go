// Code generated by mockery v2.20.2. DO NOT EDIT.

package mocks

import (
	context "context"
	io "io"

	domain "github.com/antelman107/filestorage/pkg/domain"

	mock "github.com/stretchr/testify/mock"
)

// GatewayUploaderService is an autogenerated mock type for the GatewayUploaderService type
type GatewayUploaderService struct {
	mock.Mock
}

// Upload provides a mock function with given fields: ctx, chunks, file, reader
func (_m *GatewayUploaderService) Upload(ctx context.Context, chunks domain.Chunks, file domain.File, reader io.Reader) error {
	ret := _m.Called(ctx, chunks, file, reader)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, domain.Chunks, domain.File, io.Reader) error); ok {
		r0 = rf(ctx, chunks, file, reader)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewGatewayUploaderService interface {
	mock.TestingT
	Cleanup(func())
}

// NewGatewayUploaderService creates a new instance of GatewayUploaderService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewGatewayUploaderService(t mockConstructorTestingTNewGatewayUploaderService) *GatewayUploaderService {
	mock := &GatewayUploaderService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
