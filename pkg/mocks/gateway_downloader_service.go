// Code generated by mockery v2.20.2. DO NOT EDIT.

package mocks

import (
	context "context"
	io "io"

	domain "github.com/antelman107/filestorage/pkg/domain"

	mock "github.com/stretchr/testify/mock"
)

// GatewayDownloaderService is an autogenerated mock type for the GatewayDownloaderService type
type GatewayDownloaderService struct {
	mock.Mock
}

// Download provides a mock function with given fields: ctx, chunks, writer
func (_m *GatewayDownloaderService) Download(ctx context.Context, chunks domain.Chunks, writer io.Writer) error {
	ret := _m.Called(ctx, chunks, writer)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, domain.Chunks, io.Writer) error); ok {
		r0 = rf(ctx, chunks, writer)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewGatewayDownloaderService interface {
	mock.TestingT
	Cleanup(func())
}

// NewGatewayDownloaderService creates a new instance of GatewayDownloaderService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewGatewayDownloaderService(t mockConstructorTestingTNewGatewayDownloaderService) *GatewayDownloaderService {
	mock := &GatewayDownloaderService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
