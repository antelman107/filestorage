// Code generated by mockery v2.20.2. DO NOT EDIT.

package mocks

import (
	domain "github.com/antelman107/filestorage/pkg/domain"
	mock "github.com/stretchr/testify/mock"

	sqlx "github.com/jmoiron/sqlx"
)

// GatewayRepositoryProvider is an autogenerated mock type for the GatewayRepositoryProvider type
type GatewayRepositoryProvider struct {
	mock.Mock
}

// GetRepository provides a mock function with given fields: db
func (_m *GatewayRepositoryProvider) GetRepository(db *sqlx.DB) domain.GatewayRepository {
	ret := _m.Called(db)

	var r0 domain.GatewayRepository
	if rf, ok := ret.Get(0).(func(*sqlx.DB) domain.GatewayRepository); ok {
		r0 = rf(db)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(domain.GatewayRepository)
		}
	}

	return r0
}

type mockConstructorTestingTNewGatewayRepositoryProvider interface {
	mock.TestingT
	Cleanup(func())
}

// NewGatewayRepositoryProvider creates a new instance of GatewayRepositoryProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewGatewayRepositoryProvider(t mockConstructorTestingTNewGatewayRepositoryProvider) *GatewayRepositoryProvider {
	mock := &GatewayRepositoryProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
