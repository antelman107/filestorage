// Code generated by mockery v2.20.2. DO NOT EDIT.

package mocks

import (
	domain "github.com/antelman107/filestorage/pkg/domain"
	mock "github.com/stretchr/testify/mock"

	zap "go.uber.org/zap"
)

// StorageHandlerProvider is an autogenerated mock type for the StorageHandlerProvider type
type StorageHandlerProvider struct {
	mock.Mock
}

// GetStorageHandler provides a mock function with given fields: service, logger
func (_m *StorageHandlerProvider) GetStorageHandler(service domain.StorageService, logger *zap.Logger) domain.EchoHandler {
	ret := _m.Called(service, logger)

	var r0 domain.EchoHandler
	if rf, ok := ret.Get(0).(func(domain.StorageService, *zap.Logger) domain.EchoHandler); ok {
		r0 = rf(service, logger)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(domain.EchoHandler)
		}
	}

	return r0
}

type mockConstructorTestingTNewStorageHandlerProvider interface {
	mock.TestingT
	Cleanup(func())
}

// NewStorageHandlerProvider creates a new instance of StorageHandlerProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewStorageHandlerProvider(t mockConstructorTestingTNewStorageHandlerProvider) *StorageHandlerProvider {
	mock := &StorageHandlerProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
